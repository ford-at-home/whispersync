name: Integration Tests

# Trigger on PR and push to main
on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]
  push:
    branches: [main]
  # Allow manual trigger
  workflow_dispatch:

# Cancel in-progress runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  integration-tests:
    name: AWS Integration Tests
    runs-on: ubuntu-latest
    # Only run if not from dependabot
    if: ${{ github.actor != 'dependabot[bot]' }}
    
    # Set timeout for long-running tests
    timeout-minutes: 30
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          
      - name: Cache pip packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-integration-${{ hashFiles('requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-integration-
            
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Verify AWS access
        run: |
          aws sts get-caller-identity
          echo "AWS credentials configured successfully"
          
      - name: Set up test environment
        run: |
          # Export environment variables for tests
          export TEST_BUCKET_NAME="${{ secrets.TEST_S3_BUCKET }}"
          export TEST_GITHUB_TOKEN="${{ secrets.TEST_GITHUB_TOKEN }}"
          export AWS_REGION="${{ secrets.AWS_REGION }}"
          
          # Create test configuration
          cat > test_config.json << EOF
          {
            "test_bucket": "${TEST_BUCKET_NAME}",
            "aws_region": "${AWS_REGION}",
            "test_prefix": "integration-tests-${{ github.run_id }}"
          }
          EOF
          
      - name: Run integration tests
        env:
          TEST_BUCKET_NAME: ${{ secrets.TEST_S3_BUCKET }}
          TEST_GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Run integration tests with proper isolation
          pytest tests/integration/ -v \
            --junit-xml=integration-test-results.xml \
            -m "not slow" \
            --tb=short
            
      - name: Run slow integration tests
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env:
          TEST_BUCKET_NAME: ${{ secrets.TEST_S3_BUCKET }}
          TEST_GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          # Run slow tests only on main branch
          pytest tests/integration/ -v \
            --junit-xml=slow-integration-test-results.xml \
            -m "slow" \
            --tb=short
            
      - name: Clean up test resources
        if: always()
        run: |
          # Clean up any test resources created
          python scripts/cleanup_test_resources.py \
            --prefix "integration-tests-${{ github.run_id }}" \
            --bucket "${{ secrets.TEST_S3_BUCKET }}"
            
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: |
            integration-test-results.xml
            slow-integration-test-results.xml
            
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Integration Test Results
          path: '*-test-results.xml'
          reporter: java-junit
          
      - name: Notify on failure
        if: failure() && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Integration tests failed on main branch!"
          # Add notification logic here (Slack, email, etc.)